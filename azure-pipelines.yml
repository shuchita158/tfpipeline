# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
stages:
- stage: Terraform Plan
  variables: 
    ENV: 'Dev' 
  jobs:
  - job: Plan TF Infra
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      inputs:
        terraformVersion: '0.15.0'
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'shuchita-payg'
        backendAzureRmResourceGroupName: 'tfstate-rg'
        backendAzureRmStorageAccountName: 'storagetfstatetest'
        backendAzureRmContainerName: 'tfstatecontainer'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'shuchita-payg'
  
- stage: Terraform Apply Env1
  variables:
    ENV: 'Dev'
  jobs:
  - job: Apply TF
    steps:
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'apply'
        environmentServiceNameAzureRM: 'shuchita-payg'

